import java.io.PrintStream;

aspect PrettyPrint {
	public void ASTNode.prettyPrint(PrintStream out) {
		prettyPrint(out, "");
		out.println();
	}

	public void ASTNode.prettyPrint(PrintStream out, String ind) {
	  for (ASTNode child : astChildren()) {
		  child.prettyPrint(out, ind);
		}
	}

    public void FunctionDecl.prettyPrint(PrintStream out, String ind){
		out.print("int " +getID() + "(");
		if(hasParam()){
			int i=0;
			for(Param p : getParams()){
				p.prettyPrint(out, ind); 
				if(i!=getNumParam()-1){
					out.print(", ");
				}
				i++;
			}
		}
		out.print(")");
		getBlock().prettyPrint(out, ind);
    }

	public void Param.prettyPrint(PrintStream out, String ind) {
		out.print("int ");
		out.print(getID());
	}

	public void AssignmentStmt.prettyPrint(PrintStream out, String ind) {
		getVariableUse().prettyPrint(out, ind);
		out.print(" = ");
		getExpr().prettyPrint(out, ind);
		out.println(";");
	}

	public void DeclAssignmentStmt.prettyPrint(PrintStream out, String ind) {
		out.print("int " + getID());
		out.print(" = ");
		getExpr().prettyPrint(out, ind);
        out.println(";");
	}

	public void FunctionCallStmt.prettyPrint(PrintStream out, String ind) {
		getExpr().prettyPrint(out, ind);
		out.println(";");
	}

	public void WhileStmt.prettyPrint(PrintStream out, String ind) {
	    out.print("while(");
		getExpr().prettyPrint(out, ind);
		out.print(")");
		getBlock().prettyPrint(out, ind);
	}
		
	public void IfStmt.prettyPrint(PrintStream out, String ind) {
		out.print("if (");
		getExpr().prettyPrint(out, ind);
		out.print(")");
		getBlock().prettyPrint(out, ind);
	}

	public void ReturnStmt.prettyPrint(PrintStream out, String ind) {
		out.print("return ");
		getExpr().prettyPrint(out, ind);
		out.println(";");
	}

	public void FunctionCall.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
		out.print("(");
		if(hasArg()){
			int i=0;
			for(Expr a : getArgs()){
				a.prettyPrint(out, ind);
				if(i!=getNumArg()-1){
					out.print(", ");
				}
				i++;
			}
		}

		out.print(")");
	}

	public void Unary.prettyPrint(PrintStream out, String ind) {
	}

	public void Mul.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("*");
		getRight().prettyPrint(out, ind);
	}

	public void Div.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("/");
		getRight().prettyPrint(out, ind);
	}

    public void Mod.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("%");
		getRight().prettyPrint(out, ind);
	}

    public void Add.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("+");
		getRight().prettyPrint(out, ind);
	}

    public void Sub.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("-");
		getRight().prettyPrint(out, ind);
	}

    public void Equal.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("==");
		getRight().prettyPrint(out, ind);
	}

    public void NotEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("!=");
		getRight().prettyPrint(out, ind);
	}

    public void LessThan.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("<");
		getRight().prettyPrint(out, ind);
	}

    public void GreaterThan.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(">");
		getRight().prettyPrint(out, ind);
	}

    public void LessOrEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print("<=");
		getRight().prettyPrint(out, ind);
	}

    public void GreaterOrEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(">=");
		getRight().prettyPrint(out, ind);
	}

	public void Numeral.prettyPrint(PrintStream out, String ind) {
		out.print(getNUMERAL());
	}

	public void VariableDecl.prettyPrint(PrintStream out, String ind) {
		out.print("int ");
		out.print(getID());
		out.println(";");
	}

	public void VariableUse.prettyPrint(PrintStream out, String ind){
		out.print(getID());
	}

    public void Block.prettyPrint(PrintStream out, String ind) {
		out.println(" {");
		for(int i=0; i<getNumStmt(); i++){
			out.print(ind + "  ");
			getStmt(i).prettyPrint(out, ind + "  ");
		}
		out.println(ind + "}");
	}

}
