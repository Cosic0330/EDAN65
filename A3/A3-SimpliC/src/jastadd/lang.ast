Program ::= FunctionDecl*;

FunctionDecl ::= <ID:String> Param* Block;

Param ::= <ID:String>;

Block ::= Stmt*;

abstract Stmt;
VariableDecl : Stmt ::= <ID:String>;                        //IdDecl
AssignmentStmt : Stmt ::= VariableUse Expr;
DeclAssignmentStmt : Stmt ::= <ID:String> Expr;
FunctionCallStmt : Stmt ::= Expr;
WhileStmt : Stmt ::= Expr Block;
IfStmt : Stmt ::= Expr Block [Else:Block];
ReturnStmt : Stmt ::= Expr;

abstract Expr;
VariableUse : Expr ::= <ID:String>;                        //IdUse
FunctionCall : Expr ::= <ID:String> Arg:Expr*;
Numeral : Expr ::= <NUMERAL:String>;

Unary : Expr ::= Expr;

Add : Expr ::= Left:Expr Right:Expr;
Sub : Expr ::= Left:Expr Right:Expr;
Mul : Expr ::= Left:Expr Right:Expr;
Div : Expr ::= Left:Expr Right:Expr;
Mod : Expr ::= Left:Expr Right:Expr;

Equal : Expr ::= Left:Expr Right:Expr;
NotEqual : Expr ::= Left:Expr Right:Expr;
LessThan : Expr ::= Left:Expr Right:Expr;
GreaterThan : Expr ::= Left:Expr Right:Expr;
LessOrEqual : Expr ::= Left:Expr Right:Expr;
GreaterOrEqual : Expr ::= Left:Expr Right:Expr;